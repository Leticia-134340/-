IDE
CMD
SourceTree
깃크라켄
- Ecplipse(JAVA, JAP/SERVLET)
- STS3(전자정부 Framework)
-Intellij
 -Vscode

SourceTree
GIT 관련 기술
Git Stash
GIT rebase(임시저장)
GIT rebase merge(git tree 깔끔작업)
GIT flow

test2_1  폴더에 Source tree 연결
commit 적용하기
- aaa.txt 파일 생성 후 V0.0 master commit
- dev branch 생성 후 dev.txt파일 생성 후 "V0.1 dev init" commit
- feature/func1 branch 생성 후 func1.txt 파일 생성 후 "V0.2 func1.txt add" commit
- feature/func2 branch 생성 후 func2.txt 파일 생성 후 "V0.2 func2.txt add" commit
- feature/func1 branch 를 dev에 병합
- feature/func2 branch 를 dev에 병합
- master 에 dev 병합
- 발생하는 충돌이 있을 시 적절하게 해결 후 commit merge 할 것


1 source_tree_2 github repo 생성(readme 생성 체크 해서 main 브랜치 생성)
2 sourcetree 로 cloun하기
3 developer branch 생성 후 파일 추가(dev.txt) 후 "V0.0 dev's init" commit
4 feature/board branch 생성 후 borad.txt 파일 생성하고 "V0.1 feature/board init" commit
5 feature/auth branch 생성 후 auth.txt 파일 생성하고 "V0.1 feature/auth init" commit
6 developer branch 로 이동 후 readme.md 수정("V0.1 rebasemerge") 한 다음 commit
7 feature/board branch 를 developer branch로 rebase 처리(developer 보다 feature/board branch가 위에 있어야 함)
8 developer branch 에서 rebase 된 feathre/board branch 를 병합
9 feature/auth branch 를 developer branch로 rebase 처리(developer 보다 featyre/auth branch가 위에 있어야 함)
10 developer branch 에서 rebase 된 feathre/auth branch 를 병합

11 developer branch를 main으로 병합
12 수정사항 전부를 github로 push

기본은 dev branch 이다

